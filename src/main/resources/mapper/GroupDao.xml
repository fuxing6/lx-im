<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.dao.GroupDao">
    
	<sql id="groupColumns">
		a.id AS "id",
		a.create_user AS "createUser",
		a.name AS "name",
		a.create_time AS "createTime",
		a.update_time AS "updateTime",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="groupJoins">
	</sql>
    
	<select id="get" resultType="Group">
		SELECT 
			<include refid="groupColumns"/>
		FROM t_group a
		<include refid="groupJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Group">
		SELECT 
			<include refid="groupColumns"/>
		FROM t_group a
		<include refid="groupJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Group">
		SELECT 
			<include refid="groupColumns"/>
		FROM t_group a
		<include refid="groupJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO t_group(
			id,
			create_user,
			name,
			create_time,
			update_time,
			del_flag
		) VALUES (
			#{id},
			#{createUser},
			#{name},
			#{createTime},
			#{updateTime},
			#{delFlag}
		)
	</insert>
	
	<insert id="insertBatch">
		INSERT INTO t_group(
			id,
			create_user,
			name,
			create_time,
			update_time,
			del_flag
		)
		values 
		
	<foreach collection="list" item="e" index="index" separator=" ,">
	   (
								#{e.id},
					#{e.createUser},
					#{e.name},
					#{e.createTime},
					#{e.updateTime},
					#{e.delFlag}
		)
	</foreach>
	
	</insert>
	
	<update id="update">
		UPDATE t_group SET 	
			create_user = #{createUser},
			name = #{name},
			create_time = #{createTime},
			update_time = #{updateTime}
		WHERE id = #{id}
	</update>
	
	<update id="updateNotNull">
		UPDATE t_group SET 	
						<if test="create_user!=null">
						create_user = #{createUser},
						</if>
						<if test="name!=null">
						name = #{name},
						</if>
						<if test="create_time!=null">
						create_time = #{createTime},
						</if>
						<if test="update_time!=null">
						update_time = #{updateTime},
						</if>
		update_by =#{updateBy.id}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE t_group SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<update id="deleteBatch">
		UPDATE t_group SET 
			del_flag = '1'
		WHERE id in 
		<foreach collection="list" item="id" open="(" close=")" separator=",">
			 #{id}
		</foreach>
	</update>
</mapper>